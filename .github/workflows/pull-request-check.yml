name: Pull Request Check

#
#   IMPORTANT TO KNOW
#
# - This workflow runs whenever new changes are pushed to an existing Pull Request
# - Runs on 'master', 'develop', 'release/*' and 'hotfix/*' branches
#

on:
  pull_request:
    branches: [ master, develop, feature/*, release/*, hotfix/*, bugfix/*]
    types: [opened, edited, reopened]
      
jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [11]
    name: Build project with Java ${{ matrix.java }} ensure quality and security gates
    env:
      DEVOPS_CICD_ECR_BASE_URL: ${{ secrets.DEVOPS_CICD_ECR_BASE_URL }}
      GITHUB_PROJECT: ${{ github.event.repository.name }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BB_USERNAME: ${{ secrets.BAAS_BB_ARTIFACTORY_MAVEN_USERNAME }}
      BB_PASSWORD: ${{ secrets.BAAS_BB_ARTIFACTORY_MAVEN_PASSWORD }}
      BB_GITHUB_PACKAGES_USER: ${{ secrets.BB_GITHUB_PACKAGES_USER }}
      BB_GITHUB_PACKAGES_PAT: ${{ secrets.BB_GITHUB_PACKAGES_PAT }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Check out ${{ github.event.pull_request.head.ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Cache Maven Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      
      - name: Maven setup with credentials
        uses: whelk-io/maven-settings-xml-action@v9
        with:
          repositories: |
            [
              {"id": "github-packages", "url": "https://maven.pkg.github.com/baas-devops-cnb/*"},
              {"id": "Backbase Repository", "url": "https://repo.backbase.com/repo"}
            ]
          plugin_repositories: |
            [
              {"id": "Backbase Repository", "url": "https://repo.backbase.com/repo"}
            ]
          servers: |
            [
              {"id": "Backbase Repository", "username": "${{ secrets.BAAS_BB_ARTIFACTORY_MAVEN_USERNAME }}", "password": "${{ secrets.BAAS_BB_ARTIFACTORY_MAVEN_PASSWORD }}"},
              {"id": "github-packages", "username": "${BB_GITHUB_PACKAGES_USER}", "password": "${{ secrets.BB_GITHUB_PACKAGES_PAT }}"}
            ]

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVOPS_CICD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVOPS_CICD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEVOPS_CICD_AWS_REGION }}

      - name: Get AWS ECR credentials
        id: ecr-credentials
        run: |
          echo "::set-output name=username::AWS"
          echo "::set-output name=password::`aws ecr get-login-password --region ${{ secrets.DEVOPS_CICD_AWS_REGION }}`"

      - name: Get project version
        id: mvn-project-version
        run: |
          echo "::set-output name=project_version::`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`"

      - name: Build project with tests
        run: mvn clean install

      # Run Sonar scan
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run Sonar check
        run: mvn verify sonar:sonar
        env:
          SONAR_ORGANIZATION: ${GITHUB_REPOSITORY_OWNER}
          SONAR_PROJECT_KEY: ${GITHUB_REPOSITORY_OWNER}_${GITHUB_PROJECT}
